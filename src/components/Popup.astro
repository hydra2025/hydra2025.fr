---
import type { Member } from "../organigramme";
import linkedin from "../assets/socials/linkedin.svg?raw";
import facebook from "../assets/socials/facebook.svg?raw";
import Image from "astro/components/Image.astro";

interface Props {
  membre: Member;
}

const { membre } = Astro.props;

const id1 = Math.random().toString(36).slice(2, 11);
const id2 = Math.random().toString(36).slice(2, 11);
---

{membre._has_overlay && <div class="overlay" id="contenu" />}
<div class="popup" id={id2}>
  <div class="border"></div>
  <div class="image">
    {
      membre.img ? (
        <Image
          src={membre.img}
          alt={`Photo de ${membre.first_name}`}
          class="picture"
          loading={membre.respo ? "eager" : "lazy"}
          width={240}
          height={240}
        />
      ) : (
        <div class="placeholder">ðŸ˜Ž</div>
      )
    }
  </div>
  <div class="infos">
    <span class="question">PrÃ©nom :</span>
    <span class="answer first-name">{membre.first_name}</span>
    <span class="question">Nom :</span>
    <span class="answer last-name">{membre.last_name}</span>
    <span class="question">RÃ´le :</span>
    <span class="answer role">{membre.role}</span>
    {membre.questionExtra &&
    <span class="question">{membre.questionExtra}</span>
    <span class="answer respo">{membre.answerExtra}</span>}
  </div>
</div>
<div class:list={["bouton", "visible", { respo: membre.respo }]} id={id1}>
  <div class:list={["border", { respo: membre.respo }]}></div>
  <div class="imageBouton">
    {
      membre.img ? (
        <Image
          src={membre.img}
          alt={`Photo de ${membre.first_name}`}
          class="picture"
          loading="eager"
          width={192}
          height={192}
        />
      ) : (
      <div class="placeholder">ðŸ§¡</div>
      )
    }
  </div>
  <div class="bottom">
    <div class="info">
      <div class="first-name">{membre.first_name}</div>
      <div class="last-name">{membre.last_name}</div>
      <div class="role">{membre.role}</div>
    </div>
    <div class="socials">
      {
        membre.linkedin && (
          <a
            href={membre.linkedin}
            title={`Page LinkedIn de ${membre.first_name}`}
            class="social"
            target="_blank"
          >
            <Fragment set:html={linkedin} />
          </a>
        )
      }
      {
        membre.facebook && (
          <a
            href={membre.facebook}
            title={`Profil Facebook de ${membre.first_name}`}
            class="social"
            target="_blank"
          >
            <Fragment set:html={facebook} />
          </a>
        )
      }
    </div>
  </div>
</div>

<script define:vars={{ membre, id1, id2 }} is:inline>

  const overlay = document.querySelector(".overlay");
  const bouton = document.getElementById(id1);
  const popup = document.getElementById(id2);

  bouton.addEventListener("click", () => {
    overlay.classList.add("visible");
    popup.classList.add("visible");
    bouton.classList.remove("visible");
    
    setTimeout(() => (popup.style.width = "min(95vw, 40em)"), 300);
    overlay.addEventListener("click", () => {
      popup.style.width = "0";
      setTimeout(() => {
        overlay.classList.remove("visible");
        popup.classList.remove("visible");
        bouton.classList.add("visible");
        overlay.removeEventListener("click", () => {});
      }, 600);
    });
  });
  
</script>

<script>
  document.addEventListener("keydown", (event) => {
    if (event.key === "Escape") {
      const overlayElement = document.querySelector(".overlay") as HTMLElement;
      if (overlayElement) {
        overlayElement.click();
      }
    }
  });
  
</script>

<style>
  .overlay {
    display: none;
    position: fixed;
    inset: 0;
    z-index: 5;
    backdrop-filter: blur(0px);
    -webkit-backdrop-filter: blur(0px);
    background-color: rgba(var(--color-background-rgb), 0.0);
    transition: background-color 0.3s ease, backdrop-filter 0.3s ease;
  }

  .overlay.visible {
    display: block;
    background-color: rgba(var(--color-background-rgb), 0.5);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }



  .popup {
    width: 0;
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    flex-direction: row;
    padding: 2rem;
    background-color: var(--color-background);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    box-sizing: border-box;
    overflow: hidden;
    clip-path: polygon(
      50px 0%,
      0% 50px,
      0% calc(100% - 20px),
      20px 100%,
      calc(80% - 10px) 100%,
      80% calc(100% - 10px),
      calc(100% - 30px) calc(100% - 10px),
      100% calc(calc(100% - 10px) - 30px),
      100% 0%,
      50px 0%
    );
    transition: width 0.3s ease;
  }
  .popup.visible {
    display: flex;
  }

  .popup .border {
    opacity: 1;
    z-index: 7;
  }

    /* Disable blur on mobile */
    @media screen and (max-width: 800px) {
    .overlay {
      backdrop-filter: blur(0px);
      -webkit-backdrop-filter: blur(0px);
      background-color: rgba(var(--color-background-rgb), 0.8);
    }
    .popup {
      backdrop-filter: blur(0px);
      -webkit-backdrop-filter: blur(0px);
    }
  }

  .popup .picture,
  .popup .placeholder {
    width: 15rem;
    height: 15rem;
    margin-bottom: 1rem;
    margin-right: 2rem;
    background-color: var(--color-secondary);
    clip-path: polygon(25px 0%, 0% 25px, 0% 100%, 100% 100%, 100% 0%, 50px 0%);
  }

  .popup .infos {
    display: grid;
    column-gap: 1rem;

    grid-template-columns: auto 1fr;
    width: fit-content;
    height: fit-content;
    text-wrap: nowrap;
    white-space: nowrap;
    font-size: 1.2rem;
    color: var(--color-text);
  }

  .popup .question {
    font-weight: lighter;
    text-align: right;
    box-sizing: content-box;
    display: block;
    align-self: baseline;
    width: 100%;

  }
  .popup .answer {
    font-weight: bold;
    display: block;
    font-family: var(--font-family-title);
    text-align: left;
    font-size: 1.3rem;
    align-self: baseline;
  }

  .bouton {
    padding: 2.5rem 2.5rem 2rem 2.5rem;
    box-sizing: border-box;
    text-align: left;
    background-color: rgba(var(--color-primary-rgb), 0.1);
    backdrop-filter: blur(10px);
    position: relative;
    opacity: 0.2;
    clip-path: polygon(
      50px 0%,
      0% 50px,
      0% calc(100% - 20px),
      20px 100%,
      calc(80% - 10px) 100%,
      80% calc(100% - 10px),
      calc(100% - 30px) calc(100% - 10px),
      100% calc(calc(100% - 10px) - 30px),
      100% 0%,
      50px 0%
    );
    transition:
      background-color 0.3s ease,
      opacity 0.5s ease;
  }

  .bouton.visible {
    opacity: 1;
  }

  .picture,
  .placeholder {
    display: block;
    width: 12rem;
    height: 12rem;
    margin-bottom: 1rem;
    background-color: var(--color-secondary);
    transition:
      transform 0.3s ease,
      border-radius 0.3s ease;
  }

  .bouton .picture {
    object-fit: cover;
  }

  .placeholder {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 6rem;
  }

  .bouton:hover .picture,
  .bouton:hover .placeholder {
    border-radius: 5px;
    cursor: pointer;
    transform: scale(1.05);
  }

  .border {
    position: absolute;
    inset: 0;
    opacity: 0.3;
    background-color: var(--color-primary);
    z-index: 0;
    clip-path: polygon(
      50px 0%,
      0% 50px,
      0% calc(100% - 20px),
      20px 100%,
      calc(80% - 10px) 100%,
      80% calc(100% - 10px),
      calc(100% - 30px) calc(100% - 10px),
      100% calc(calc(100% - 10px) - 30px),
      100% 0%,
      50px 0%,
      calc(3px + calc(50px - calc(3px * 0.7071067811865475))) 3px,
      calc(100% - 3px) 3px,
      calc(100% - 3px)
        calc(
          calc(calc(100% - 10px) - 3px) -
            calc(30px - calc(3px * 0.7071067811865475))
        ),
      calc(calc(100% - 3px) - calc(30px - calc(3px * 0.7071067811865475)))
        calc(calc(100% - 10px) - 3px),
      calc(calc(80% - 3px) + calc(3px * 0.7071067811865475))
        calc(calc(100% - 3px) - 10px),
      calc(calc(80% - 3px) - calc(10px - calc(3px * 0.7071067811865475)))
        calc(100% - 3px),
      calc(3px + calc(20px - calc(3px * 0.7071067811865475))) calc(100% - 3px),
      3px calc(calc(100% - 3px) - calc(20px - calc(3px * 0.7071067811865475))),
      3px calc(3px + calc(50px - calc(3px * 0.7071067811865475))),
      calc(3px + calc(50px - calc(3px * 0.7071067811865475))) 3px
    );

    transition: opacity 0.3s ease;
  }

  .bouton .border.respo {
    opacity: 0.9;
  }

  .bouton .bouton:hover .border {
    opacity: 1;
  }
  .bouton .bouton:hover {
    cursor: pointer;
    background-color: rgba(var(--color-primary-rgb), 0.2);
  }

  .bouton .imageBouton {
    text-align: center;
    overflow: hidden;
    clip-path: polygon(25px 0%, 0% 25px, 0% 100%, 100% 100%, 100% 0%, 50px 0%);

  }

  .bouton .bottom {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-top: 1rem;
    height: fit-content;
  }
  .bouton .socials {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: 0.25em;
  }
  .bouton .social {
    width: 1.5em;
    height: 1.5em;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    transition: transform 0.3s ease;
    color: var(--color-primary);
  }

  .bouton .social:hover {
    transform: scale(1.2);
  }
  .bouton .last-name {
    text-transform: uppercase;
    font-weight: bold;
  }
  .bouton .role {
    opacity: 0.7;
    font-size: 0.9rem;
  }

  @media screen and (max-width: 800px) {
    .popup {
      flex-direction: column;
      align-items: center;
      padding: 1rem;
    }
    .popup .picture,
    .popup .placeholder {
      margin: 0;
    }
    .popup .infos {
      width: min(95vw, 40em);
      grid-template-columns: 1fr 1fr;
    }
    .bouton.respo {
      order: -1;
    }
  }
</style>
